version: 2

jobs:
  build:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
            - v-3.0.10-electron
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          command: yarn
      - save_cache:
          key: deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: yarn rwin
      - save_cache:
          key: v-3.0.10-electron
          paths:
            - ~/.cache/electron

  test:
    parallelism: 4
    docker:
      - image: electronuserland/builder:wine-mono
        environment:
          JEST_JUNIT_OUTPUT: ./test-reports/test.xml
          TZ: Europe/Berlin
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "yarn.lock" }}
      - restore_cache:
          keys:
            - v-3.0.10-electron
      # because in the build job we use circleci docker image and circleci restores cache to original user home
      - run:
          command: |
            mv /home/circleci/project/node_modules node_modules
            mkdir -p ~/.cache
            mv /home/circleci/.cache/electron ~/.cache/electron
      - run:
          # do not use yarn test because lint is done in the build job
          command: |
            yarn compile
            node ./test/out/helpers/runTests.js
      - store_test_results:
          path: test-reports

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - docs
      - test:
          filters:
            branches:
              ignore:
                - docs
          requires:
            - build
